# Generated by Django 4.2.1 on 2023-05-15 15:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('type', models.CharField(max_length=100)),
                ('general_rating', models.IntegerField()),
                ('ethical_money_rating', models.IntegerField()),
                ('ethical_moral_rating', models.IntegerField()),
                ('ethical_marketing_rating', models.IntegerField()),
                ('ethical_educational_rating', models.IntegerField()),
                ('cheating_review', models.IntegerField()),
                ('cheating_ads', models.IntegerField()),
                ('insulting_ads', models.IntegerField()),
                ('misleading_ads', models.IntegerField()),
                ('desc_cheating_ads', models.CharField(max_length=1000)),
                ('desc_insulting_ads', models.CharField(max_length=1000)),
                ('desc_misleading_ads', models.CharField(max_length=1000)),
                ('hidden_full_cost', models.IntegerField()),
                ('crapometer', models.IntegerField()),
                ('description', models.CharField(max_length=4000)),
                ('in_hall_of_shame', models.BooleanField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=300)),
                ('type', models.CharField(choices=[('Visitor', 'Visitor'), ('Curator', 'Curator'), ('Reviewer', 'Reviewer'), ('Admin', 'Admin'), ('SuperAdmin', 'Super Admin')], default='Visitor', help_text='SuperAdmin is only for full access. Admin should be the default for persons with full edit access. Curator have limited edit rights.', max_length=50)),
                ('nb_of_articles', models.IntegerField()),
                ('avatar', models.ImageField(default='avatar.jpg', upload_to='profile_avatars')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('size', models.IntegerField()),
                ('they_have_made_it', models.IntegerField()),
                ('money_rating', models.IntegerField()),
                ('fully_rotten', models.BooleanField()),
                ('in_hall_of_shame', models.BooleanField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_studio', models.CharField(max_length=300)),
                ('they_have_made_it', models.IntegerField()),
                ('money_rating', models.IntegerField()),
                ('fully_rotten', models.BooleanField()),
                ('in_hall_of_shame', models.BooleanField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.CreateModel(
            name='Videogame_rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f2play', models.BooleanField()),
                ('f2pay', models.BooleanField()),
                ('gameplay_rating', models.IntegerField()),
                ('money_rating', models.IntegerField()),
                ('good_wo_iap', models.IntegerField()),
                ('good_wo_ads', models.IntegerField()),
                ('ads_supported', models.IntegerField()),
                ('fully_rotten', models.BooleanField()),
                ('would_be_good_if', models.CharField(max_length=1000)),
                ('could_be_good_if', models.CharField(max_length=1000)),
                ('use_psycho_tech', models.IntegerField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.platform')),
            ],
        ),
        migrations.CreateModel(
            name='Videogame_common',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(max_length=300)),
                ('gameplay_rating', models.IntegerField()),
                ('they_have_made_it', models.IntegerField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videogame_common', to='filtershop_main.person')),
                ('for_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.entity')),
                ('platforms', models.ManyToManyField(to='filtershop_main.platform')),
                ('publishers', models.ManyToManyField(to='filtershop_main.publisher')),
                ('ratings', models.ManyToManyField(to='filtershop_main.videogame_rating')),
                ('studios', models.ManyToManyField(to='filtershop_main.studio')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('good_or_bad', models.IntegerField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('child_tags', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.tag')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.CreateModel(
            name='Studio_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.CharField(max_length=1000)),
                ('size', models.IntegerField()),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.AddField(
            model_name='studio',
            name='type_of_studio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.studio_type'),
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('url', models.CharField(max_length=300)),
                ('in_hall_of_shame', models.BooleanField()),
                ('descriptionOfShame', models.CharField(max_length=1000)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.person')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.CharField(max_length=4000)),
                ('url', models.CharField(max_length=200)),
                ('identity', models.ImageField(upload_to='')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
        ),
        migrations.CreateModel(
            name='Links_to_shops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.CharField(max_length=1000)),
                ('link', models.CharField(max_length=300)),
                ('identity', models.CharField(max_length=300)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.shop')),
            ],
        ),
        migrations.AddField(
            model_name='entity',
            name='Links_to_shops',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.links_to_shops'),
        ),
        migrations.AddField(
            model_name='entity',
            name='created_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='entity',
            name='tags',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filtershop_main.tag'),
        ),
    ]
